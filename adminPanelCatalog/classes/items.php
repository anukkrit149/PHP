<?php
/**
 * Created by PhpStorm.
 * User: Anukkrit
 * Date: 27-06-2019
 * Summary-
 * API Used-
 * Limitations-
 */
include 'auth.php';

class items extends auth
{
    public $itemID;
    public $itemName;
    public $itSizeMin;
    public $cat;
    public $price;
    public $ItDetails;

    /**
     * items constructor.
     * @param $itemName
     * @param $desc
     * @param $cat
     * @param $price
     */
    public function __construct($itemName, $desc, $cat, $price)
    {
        $this->itemName = $itemName;
        $this->desc = $desc;
        $this->cat = $cat;
        $this->price = $price;
    }

    /**
     * @param mixed $pdo
     */
    public function setPdo($pdo): void
    {
        $this->pdo = $pdo;
    }




    /**
     * @return mixed
     */
    public function addItems(){
        $query="INSERT INTO items(itName,itDes,itCat,itPrice,itBy) VALUES (?,?,?,?,?);";
        $stmt = $this->pdo->prepare($query);
        $bool=$stmt->execute([$this->itemName,$this->desc,$this->cat,$this->price,$this->username]);

        if ($bool){
            $stmt = $this->pdo->prepare("SELECT * FROM users ORDER BY itid DESC LIMIT 1;");
            $stmt->execute();
            $this->itemID=$stmt->fetch()['itID'];
        }

        return $bool;
    }

    /**
     * @return mixed
     */
    public function getDetailsItem()
    {
        $query="SELECT * FROM items where itID=?;";
        $stmt = $this->pdo->prepare($query);
        $stmt->execute([$this->itemID]);
        $this->ItDetails=$stmt->fetch();
        return json_encode($this->ItDetails);
    }

    public function getDetailsItemID($id)
    {
        $query="SELECT * FROM items where itID=?;";
        $stmt = $this->pdo->prepare($query);
        $stmt->execute([$id]);
        $ItDetails=$stmt->fetch();
        return json_encode($ItDetails);
    }

    /**
     * @param $f - field name that to be changed
     * @param $data - value which is to be updated
     * @return bool - result query executed or not
     */
    public function updateField($f, $data)
    {
        return parent::updateField($f, $data, "items"); // TODO: Change the autogenerated stub
    }

}